AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-sam-app
  Build latest version

  Sample SAM Template for todo-sam-app
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  EnvType:
    Type: String

Conditions:
  DevResources: !Equals 
    - !Ref EnvType
    - 'dev'

Globals:
  Function:
    Timeout: 3
    Runtime: nodejs14.x
    CodeUri: todos/
    Environment:
      Variables:
        # TODO_TABLE: todo
        TODO_TABLE: !Ref TodoSamTable
  HttpApi:
    CorsConfiguration:
      AllowOrigins:
        - '*'
      AllowHeaders:
        - '*'
      AllowMethods:
        - '*'
    Auth:
      Authorizers:
        OAuth2Authorizer:
          JwtConfiguration:
            issuer: 'https://dev--cm-941t.us.auth0.com/' 
            audience: 
              - https://auth0-jwt-authorizer-sam-integration/  
          IdentitySource: "$request.header.Authorization"
        cognitoOAuth2Authorizer:
          JwtConfiguration:
            issuer: 'https://cognito-idp.eu-west-3.amazonaws.com/eu-west-3_ZTo0pAnII' 
            audience: 
              - 4967qgmj4q2g3srd7h5ot0u3dg  
          IdentitySource: "$request.header.Authorization"
      DefaultAuthorizer: cognitoOAuth2Authorizer

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      # CodeUri: todos/
      Handler: helloworld.lambdaHandler
      # Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
            Auth: 
              Authorizer: 'NONE'

  HelloWorldFunction2:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      # CodeUri: todos/
      Handler: helloworld2.lambdaHandler
      # Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        HelloWorld2:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello2
            Method: get
            Auth: 
              Authorizer: 'NONE'

  ListTodosFunction:
      Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
      Properties:
        # CodeUri: todos/
        Handler: listTodos.handler
        # Runtime: nodejs14.x
        Architectures:
          - x86_64
        Policies:
          - DynamoDBCrudPolicy:
              TableName: !Ref TodoSamTable
        Events:
          HelloWorld:
            Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
            Properties:
              Path: /todos
              Method: get
              Auth: 
                Authorizer: cognitoOAuth2Authorizer

  GetTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      # CodeUri: todos/
      Handler: getTodo.handler
      # Runtime: nodejs
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoSamTable
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            Path: /todos/{id}
            Method: get

  UpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      # CodeUri: todos/
      Handler: updateTodo.handler
      # Runtime: nodejs
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoSamTable
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            Path: /todos/{id}
            Method: put

  CreateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      # CodeUri: todos/
      Handler: createTodo.handler
      # Runtime: nodejs
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoSamTable
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            Path: /todos
            Method: post

  DeleteTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      # CodeUri: todos/
      Handler: deleteTodo.handler
      # Runtime: nodejs
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoSamTable
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            Path: /todos/{id}
            Method: delete

  TodoSamTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/hello"
    # HelloWorldFunction:
    #   Description: "Hello World Lambda Function ARN"
    #   Value: !GetAtt HelloWorldFunction.Arn
    # HelloWorldFunctionIamRole:
    #   Description: "Implicit IAM Role created for Hello World function"
    #   Value: !GetAtt HelloWorldFunctionRole.Arn
